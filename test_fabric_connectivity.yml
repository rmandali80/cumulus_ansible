---
- name: Test Connectivity Between Devices
  hosts: all
  gather_facts: no
  vars:
    ansible_connection: ssh
  tasks:
    - name: Test SSH connectivity (Ansible ping)
      ansible.builtin.ping:
      register: ping_result
      ignore_errors: yes

    - name: Display SSH connectivity result
      ansible.builtin.debug:
        msg: "✓ SSH connectivity successful to {{ inventory_hostname }}"
      when: ping_result is succeeded

    - name: Display SSH connectivity failure
      ansible.builtin.debug:
        msg: "✗ SSH connectivity FAILED to {{ inventory_hostname }}"
      when: ping_result is failed



    - name: Test loopback reachability between leafs
      ansible.builtin.shell: |
        output=$(ping -c 3 -W 2 {{ hostvars[item].loopback }} 2>&1)
        stats=$(echo "$output" | grep "packets transmitted" | sed -n 's/.*\([0-9]\+\) packets transmitted.*\([0-9]\+\) received.*/\1\/\2/p')
        echo "${stats:-0/0}"
      loop: "{{ groups['leafs'] }}"
      register: leaf_to_leaf_ping
      when: "'leafs' in group_names"
      ignore_errors: yes
      changed_when: false

    - name: Display spine to leaf connectivity
      ansible.builtin.debug:
        msg: "{{ inventory_hostname }} -> {{ item.item }} ({{ hostvars[item.item].loopback }}): {{ '✓' if item.rc == 0 else '✗' }} [Tx/Rx: {{ item.stdout | trim }}]"
      loop: "{{ leaf_to_leaf_ping.results }}"
      loop_control:
        label: "{{ item.item }}"
      when: "'leafs' in group_names and leaf_to_leaf_ping.results is defined"

    - name: Test loopback reachability between leafs
      ansible.builtin.shell: |
        output=$(ping -c 3 -W 2 {{ hostvars[item].loopback }} 2>&1)
        stats=$(echo "$output" | grep "packets transmitted" | sed -n 's/.*\([0-9]\+\) packets transmitted.*\([0-9]\+\) received.*/\1\/\2/p')
        echo "${stats:-0/0}"
      loop: "{{ groups['leafs'] }}"
      register: leaf_to_spine_ping
      when: "'leafs' in group_names"
      ignore_errors: yes
      changed_when: false


- name: Test Network Connectivity Between Fabric Devices
  hosts: all
  gather_facts: no
  vars:
    ansible_connection: ssh
  tasks:
    - name: Test loopback reachability from spines to leaf
      ansible.builtin.shell: |
        output=$(ping -c 3 -W 2 {{ hostvars[item].loopback }} 2>&1)
        stats=$(echo "$output" | grep "packets transmitted" | sed -n 's/.*\([0-9]\+\) packets transmitted.*\([0-9]\+\) received.*/\1\/\2/p')
        echo "${stats:-0/0}"
      loop: "{{ groups['leafs'] }}"
      register: spine_to_leaf_ping
      when: "'spines' in group_names"
      ignore_errors: yes
      changed_when: false

    - name: Display spine to leaf connectivity
      ansible.builtin.debug:
        msg: "{{ inventory_hostname }} -> {{ item.item }} ({{ hostvars[item.item].loopback }}): {{ '✓' if item.rc == 0 else '✗' }} [Tx/Rx: {{ item.stdout | trim }}]"
      loop: "{{ spine_to_leaf_ping.results }}"
      loop_control:
        label: "{{ item.item }}"
      when: "'spines' in group_names and spine_to_leaf_ping.results is defined"

    - name: Test loopback reachability from leaves to spines
      ansible.builtin.shell: |
        output=$(ping -c 3 -W 2 {{ hostvars[item].loopback }} 2>&1)
        stats=$(echo "$output" | grep "packets transmitted" | sed -n 's/.*\([0-9]\+\) packets transmitted.*\([0-9]\+\) received.*/\1\/\2/p')
        echo "${stats:-0/0}"
      loop: "{{ groups['spines'] }}"
      register: leaf_to_spine_ping
      when: "'leafs' in group_names"
      ignore_errors: yes
      changed_when: false

    - name: Display leaf to spine connectivity
      ansible.builtin.debug:
        msg: "{{ inventory_hostname }} -> {{ item.item }} ({{ hostvars[item.item].loopback }}): {{ '✓' if item.rc == 0 else '✗' }} [Tx/Rx: {{ item.stdout | trim }}]"
      loop: "{{ leaf_to_spine_ping.results }}"
      loop_control:
        label: "{{ item.item }}"
      when: "'leafs' in group_names and leaf_to_spine_ping.results is defined"

- name: Connectivity Test Summary
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Display test completion
      ansible.builtin.debug:
        msg: 
          - "================================"
          - "Connectivity Tests Completed"
          - "================================"
          - "Check output above for results"
